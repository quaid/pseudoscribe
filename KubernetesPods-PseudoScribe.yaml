apiVersion: v1
kind: Pod
metadata:
  name: PAWS_METADATANAME
  annotations:
    iam.amazonaws.com/role: "${JENKINS_SLAVE_IAM_ROLE}"
spec:
  containers:
    # Main Podman container for container operations
    - name: podman
      image: docker.intuit.com/oicp/standard/podman:latest
      tty: true
      command: [ "cat" ]
      imagePullPolicy: Always
      volumeMounts:
        - name: container-storage
          mountPath: /var/lib/containers
        - name: pseudoscribe-workspace
          mountPath: /workspace
      resources:
        limits:
          github.com/fuse: 1
          memory: "4Gi"
          cpu: "2"
        requests:
          memory: "2Gi"
          cpu: "1"
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        capabilities:
          add: [ "SYS_ADMIN", "SYS_RESOURCE" ]
      env:
        - name: PODMAN_USERNS
          value: "keep-id"
        - name: BUILDAH_ISOLATION
          value: "chroot"

    # PostgreSQL database for testing
    - name: postgresql
      image: docker.intuit.com/postgres:13
      tty: true
      imagePullPolicy: Always
      ports:
        - containerPort: 5432
      env:
        - name: POSTGRES_DB
          value: "pseudoscribe_test"
        - name: POSTGRES_USER
          value: "test_user"
        - name: POSTGRES_PASSWORD
          value: "test_password"
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "trust"
      volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      resources:
        limits:
          memory: "1Gi"
          cpu: "500m"
        requests:
          memory: "512Mi"
          cpu: "250m"

    # Ollama for AI model testing
    - name: ollama
      image: docker.intuit.com/ollama/ollama:latest
      tty: true
      command: [ "cat" ]
      imagePullPolicy: Always
      ports:
        - containerPort: 11434
      env:
        - name: OLLAMA_HOST
          value: "0.0.0.0:11434"
        - name: OLLAMA_MODELS
          value: "/models"
      volumeMounts:
        - name: ollama-models
          mountPath: /models
      resources:
        limits:
          memory: "4Gi"
          cpu: "2"
        requests:
          memory: "2Gi"
          cpu: "1"

    # Redis for caching and session management
    - name: redis
      image: docker.intuit.com/redis:7-alpine
      tty: true
      command: [ "cat" ]
      imagePullPolicy: Always
      ports:
        - containerPort: 6379
      resources:
        limits:
          memory: "512Mi"
          cpu: "250m"
        requests:
          memory: "256Mi"
          cpu: "125m"

    # Test runner container with Python environment
    - name: test-runner
      image: docker.intuit.com/dev-security/debian11-python3-11/service/debian11-python3-12:1.32.0
      tty: true
      command: [ "cat" ]
      imagePullPolicy: Always
      workingDir: /workspace
      volumeMounts:
        - name: pseudoscribe-workspace
          mountPath: /workspace
        - name: test-results
          mountPath: /test-results
      env:
        - name: PYTHONPATH
          value: "/workspace"
        - name: DATABASE_URL
          value: "postgresql://test_user:test_password@localhost:5432/pseudoscribe_test"
        - name: OLLAMA_BASE_URL
          value: "http://localhost:11434"
        - name: REDIS_URL
          value: "redis://localhost:6379"
      resources:
        limits:
          memory: "2Gi"
          cpu: "1"
        requests:
          memory: "1Gi"
          cpu: "500m"

    # CPD2 container for security scanning
    - name: cpd2
      image: docker.intuit.com/oicp/standard/cpd2:1
      tty: true
      command: ["cat"]
      imagePullPolicy: Always

    # CD Tools for deployment operations
    - name: cdtools
      image: docker.intuit.com/dev/deploy/cd/argocd-utils:stable
      tty: true
      command: ["cat"]
      imagePullPolicy: Always
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000

    # ServiceNow integration
    - name: servicenow
      image: docker.intuit.com/coe/servicenow-cr-agent/service/servicenow-cr-agent:latest
      tty: true
      command: ["cat"]
      imagePullPolicy: Always

  volumes:
    # Container storage for Podman
    - name: container-storage
      emptyDir:
        sizeLimit: "10Gi"
    
    # PostgreSQL data storage
    - name: postgres-storage
      emptyDir:
        sizeLimit: "2Gi"
    
    # Ollama models storage
    - name: ollama-models
      emptyDir:
        sizeLimit: "5Gi"
    
    # Shared workspace for code and tests
    - name: pseudoscribe-workspace
      emptyDir:
        sizeLimit: "5Gi"
    
    # Test results storage
    - name: test-results
      emptyDir:
        sizeLimit: "1Gi"

  # Pod-level settings
  restartPolicy: Never
  activeDeadlineSeconds: 3600  # 1 hour timeout
  
  # Resource quotas for the entire pod
  resources:
    limits:
      memory: "12Gi"
      cpu: "6"
    requests:
      memory: "8Gi"
      cpu: "4"
